openapi: 3.0.3
info:
  title: Nomod API Documentation (latest)
  version: 1.0.0
  description: Nomod API OpenApi Specification
paths:
  /v1/charges:
    get:
      operationId: Fetch Charges
      description: Fetch all charges list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: search
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChargeApiList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/charges/{uuid}:
    get:
      operationId: Retrieve Charge
      description: Retrieve Charge by UUID.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/charges/{uuid}/refund:
    post:
      operationId: Refund Charge
      description: Refund charge (partially or full).
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRefundRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Succesfully refunded
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
  /v1/countries:
    get:
      operationId: Fetch countries
      description: Fetch all countries sorted by name.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: country code
      - in: query
        name: uuid
        schema:
          type: string
          format: uuid
        description: UUID of country
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CountryMiniApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/countries/{uuid}/provinces:
    get:
      operationId: Fetch provinces
      description: Fetch all countries provinces
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Province'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/currencies:
    get:
      operationId: List Currency
      description: Fetch all active currencies sorted by popularity and name.
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CurrenciesApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/customers:
    get:
      operationId: Fetch Contact
      description: Retrieve a list of all contacts in the system.
      summary: List all contacts
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Page number
      - in: query
        name: page_size
        schema:
          type: integer
        description: Number of results per page
      - in: query
        name: search
        schema:
          type: string
        description: Search for first name, last name, email
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaginatedContacts'
          description: Paginated list of contacts with metadata
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
    post:
      operationId: Create Contact
      description: Create a new contact with the given details.
      summary: Create a new contact
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/customers/{uuid}:
    get:
      operationId: Get Contact
      description: Retrieve a specific contact by ID.
      summary: Retrieve a contact
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/invoices:
    get:
      operationId: List Invoice
      description: Fetch all Invoices.
      parameters:
      - in: query
        name: currency
        schema:
          type: string
        description: currency code i-e AED
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: search by title or country code
      - in: query
        name: shipping_address_required
        schema:
          type: boolean
        description: Ask for Shipping Address
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - overdue
          - paid
          - scheduled
          - unpaid
        description: invoice staus
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoiceDetailApiList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
    post:
      operationId: Generate Invoice
      description: Generate Invoice.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvoiceRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetailApi'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
  /v1/invoices/{uuid}:
    get:
      operationId: Retrieve Invoice
      description: Retrieve Invoice details by UUID.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetailApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/invoices/{uuid}/edit:
    patch:
      operationId: Edit Invoice
      description: Update the invoice.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvoiceUpdateApi'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceDetailApi'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/links:
    get:
      operationId: List Link
      description: Fetch all links.
      parameters:
      - in: query
        name: allow_tip
        schema:
          type: boolean
        description: Allow Tip
      - in: query
        name: currency
        schema:
          type: string
        description: currency code i-e AED, fetch the currency code from /currencies
          apis
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: shipping_address_required
        schema:
          type: boolean
        description: Allow Shipping Address
      - in: query
        name: status
        schema:
          type: string
          enum:
          - disabled
          - enabled
        description: link staus
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLinkApiList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
    post:
      operationId: Generate Link
      description: Generate link.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLinkRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkApi'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
  /v1/links/{uuid}:
    get:
      operationId: Retrieve Link
      description: Retrieve link details by UUID.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/links/{uuid}/edit:
    patch:
      operationId: Edit Link
      description: Enable, disable, or archive link.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLinkUpdateApi'
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkApi'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/members:
    get:
      operationId: Fetch Team member
      description: Fetch all business team member
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessUserApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
    post:
      operationId: Create Team Member
      description: Create Team Member
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteMemberRequest'
        required: true
      security:
      - apiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUserApi'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                  code:
                    type: object
                    nullable: true
                    description: Specific error code identifying the error.
          description: ''
  /v1/members/{uuid}:
    get:
      operationId: Retrieve Team Member
      description: Retrieve Team member by UUID.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessUserApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/transactions:
    get:
      operationId: Fetch Transaction
      description: Fetch all Transaction list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBalanceTransactionApiList'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/transactions/{uuid}:
    get:
      operationId: Retrieve Transaction
      description: Retrieve a specific transaction
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionApi'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Object Not found
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_found
          description: ''
  /v1/wcommerce/authenticate:
    get:
      operationId: Woocommerce Authenticate
      description: test out the api key and get business information.
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
  /v1/zapier/authenticate:
    get:
      operationId: Zapier Authenticate
      description: test out the api key and get business information.
      tags:
      - v1
      security:
      - apiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessApi'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Authentication credentials were not provided.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: not_authenticated
          description: ''
        '429':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: false
                    description: Text of the error message.
                    example: Request was throttled. Expected available in 1 second.
                  code:
                    type: object
                    nullable: false
                    description: Specific error code identifying the error.
                    example: throttled
          description: ''
components:
  schemas:
    BalanceTransactionApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        is_debit:
          type: boolean
          readOnly: true
          title: Debit
        type:
          type: string
          readOnly: true
        payable_at:
          type: string
          format: date-time
          readOnly: true
        currency:
          type: string
          title: Currency code
      required:
      - amount
      - created
      - currency
      - id
      - is_debit
      - payable_at
      - type
    BusinessApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/BusinessApiStatusEnum'
          readOnly: true
        image:
          type: string
          format: uri
          readOnly: true
          title: Business image
      required:
      - id
      - image
      - name
      - status
    BusinessApiStatusEnum:
      enum:
      - limited
      - enabled
      - review
      - disabled
      type: string
      description: |-
        * `limited` - Limited
        * `enabled` - Enabled
        * `review` - Review
        * `disabled` - Disabled
    BusinessUserApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        role:
          type: string
          title: Role code
        first_name:
          type: string
          writeOnly: true
        last_name:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
          writeOnly: true
        job_title:
          type: string
          readOnly: true
        user:
          $ref: '#/components/schemas/UserMicroApi'
        status:
          allOf:
          - $ref: '#/components/schemas/BusinessUserApiStatusEnum'
          readOnly: true
        phone_number:
          type: string
          writeOnly: true
          nullable: true
          pattern: ^(?=.{3,16}$)[+]{0,1}[0-9() -]+$
        volume:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,3})?$
        volume_currency:
          type: string
      required:
      - email
      - first_name
      - id
      - job_title
      - last_name
      - role
      - status
      - user
    BusinessUserApiStatusEnum:
      enum:
      - invited
      - enabled
      - disabled
      type: string
      description: |-
        * `invited` - Invited
        * `enabled` - Enabled
        * `disabled` - Disabled
    CardData:
      type: object
      properties:
        card_number:
          type: string
        expiry_month:
          type: string
        expiry_year:
          type: string
        security_code:
          type: string
          nullable: true
        card_holder_name:
          type: string
          nullable: true
      required:
      - card_number
      - expiry_month
      - expiry_year
    ChargeApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        taxes:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChargeItem'
        currency:
          type: string
          title: Currency code
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ChargeApiStatusEnum'
          readOnly: true
        tip:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
          title: Tax amount
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
          title: Total amount
        refund_total:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
          title: Refund total amount
        note:
          type: string
          readOnly: true
        contact:
          type: integer
          readOnly: true
        discount_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        tip_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        user:
          $ref: '#/components/schemas/UserMicroApi'
        source:
          $ref: '#/components/schemas/ChargeSource'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldAnswer'
          default: []
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/ChargeRefund'
        events:
          allOf:
          - $ref: '#/components/schemas/ChargeEventApi'
          readOnly: true
        settlement_currency:
          type: string
          title: Currency code
        fee:
          type: number
          nullable: true
          readOnly: true
        fx_fee:
          type: number
          nullable: true
          readOnly: true
        fee_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        net:
          type: number
          nullable: true
          readOnly: true
        network_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        success_url:
          type: char
          nullable: true
          readOnly: true
        failure_url:
          type: char
          nullable: true
          readOnly: true
      required:
      - contact
      - created
      - currency
      - discount
      - events
      - failure_url
      - fee
      - fee_tax
      - fx_fee
      - id
      - items
      - net
      - network_cost
      - note
      - refund_total
      - settlement_currency
      - status
      - success_url
      - tax
      - tip
      - total
      - user
    ChargeApiStatusEnum:
      enum:
      - authorised
      - cancelled
      - created
      - disputed
      - paid
      - refunded
      - partially_refunded
      - failed
      type: string
      description: |-
        * `authorised` - Authorised
        * `cancelled` - Cancelled
        * `created` - Created
        * `disputed` - Disputed
        * `paid` - Paid
        * `refunded` - Refunded
        * `partially_refunded` - Partially refunded
        * `failed` - Failed
    ChargeEventApi:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          readOnly: true
        message:
          type: string
          readOnly: true
        user:
          $ref: '#/components/schemas/UserMicroApi'
      required:
      - created
      - message
      - type
      - user
    ChargeItem:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
        name:
          type: string
          maxLength: 100
      required:
      - amount
    ChargeRefund:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
      required:
      - amount
      - created
    ChargeSource:
      type: object
      properties:
        type:
          type: string
        token:
          type: string
          nullable: true
        expiry_month:
          type: string
          nullable: true
        expiry_year:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        scheme:
          type: string
          nullable: true
        scheme_local:
          type: string
          nullable: true
        last4:
          type: string
          nullable: true
        bin:
          type: string
          nullable: true
        card_type:
          type: string
          nullable: true
        card_category:
          type: string
          nullable: true
        issuer:
          type: string
          nullable: true
        issuer_country:
          type: string
          nullable: true
        product_id:
          type: string
          nullable: true
        product_type:
          type: string
          nullable: true
        expires_on:
          type: string
          nullable: true
        card_data:
          allOf:
          - $ref: '#/components/schemas/CardData'
          nullable: true
      required:
      - type
    ContactApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        business_name:
          type: string
          readOnly: true
        job_title:
          type: string
          readOnly: true
        province:
          type: integer
          readOnly: true
        city:
          type: string
          readOnly: true
        street:
          type: string
          readOnly: true
          title: Street address
        zip_code:
          type: string
          readOnly: true
        country:
          type: string
          title: Country code
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        phone_number:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          readOnly: true
          title: Contact image
      required:
      - business_name
      - city
      - created
      - email
      - first_name
      - id
      - image
      - job_title
      - last_name
      - phone_number
      - province
      - street
      - zip_code
    ContactMiniApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        business_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
      required:
      - business_name
      - email
      - first_name
      - id
      - last_name
    CountryMiniApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        code:
          type: string
          readOnly: true
          title: Country code
        name:
          type: string
          readOnly: true
      required:
      - code
      - id
      - name
    CreateCustomerRequest:
      type: object
      properties:
        first_name:
          type: string
          description: First name
          maxLength: 50
          minLength: 3
        last_name:
          type: string
          description: Last name
          maxLength: 50
          minLength: 3
        email:
          type: string
          format: email
          description: Email address.
        phone_number:
          type: string
          description: Phone
          maxLength: 15
        business_name:
          type: string
          description: Business name.
          maxLength: 50
        job_title:
          type: string
          description: Job Title
          maxLength: 50
        country:
          type: string
          description: Country code. get it from /countries endpoint
          maxLength: 2
        province:
          type: integer
          description: Province ID. get it from /provinces endpoint
        street:
          type: string
          description: Street address
          maxLength: 100
        city:
          type: string
          description: City name.
          maxLength: 100
        zip_code:
          type: string
          description: Zip/Postal code.
          maxLength: 16
      required:
      - first_name
      - last_name
    CreateInvoiceRequest:
      type: object
      properties:
        currency:
          type: string
          description: Currency code. Get the currency code form /currencies api
          maxLength: 3
        items:
          type: array
          items:
            $ref: '#/components/schemas/LinkItemAPI'
          description: List of items with name and amount
        discount_percentage:
          allOf:
          - $ref: '#/components/schemas/DiscountPercentageEnum'
          default: 0
          description: |-
            Discount percentage

            * `0` - 0%
            * `5` - 5%
            * `10` - 10%
            * `15` - 15%
            * `20` - 20%
        contact:
          type: string
          format: uuid
          description: Contact ID, Get the contact code form /currencies api
        invoice_number:
          type: string
          description: Invoice number
          maxLength: 30
        title:
          type: string
          description: Invoice title
          maxLength: 50
        note:
          type: string
          nullable: true
          description: A note to describle what you're selling
          maxLength: 280
        shipping_address_required:
          type: boolean
          default: false
          description: Whether shipping address is required.
        due_date:
          type: string
          format: date-time
          description: Invoice due date
        starts_at:
          type: string
          format: date-time
          description: Invoice start date
        success_url:
          type: string
          format: uri
          description: Redirects to the success URL after the invoice is completed.
        failure_url:
          type: string
          format: uri
          description: Redirects to the failure URL if the invoice payment fails.
      required:
      - contact
      - currency
      - items
    CreateLinkRequest:
      type: object
      properties:
        currency:
          type: string
          description: Currency code. Get the currency code form /currencies api
          maxLength: 3
        items:
          type: array
          items:
            $ref: '#/components/schemas/LinkItemAPI'
          description: List of items with name and amount.
        title:
          type: string
          description: Craft a beautiful name for your link
          maxLength: 50
        note:
          type: string
          nullable: true
          description: Type out a quick note describing what you're selling
          maxLength: 280
        discount_percentage:
          allOf:
          - $ref: '#/components/schemas/DiscountPercentageEnum'
          default: 0
          description: |-
            Discount percentage

            * `0` - 0%
            * `5` - 5%
            * `10` - 10%
            * `15` - 15%
            * `20` - 20%
        shipping_address_required:
          type: boolean
          default: false
          description: Whether shipping address is required.
        allow_tip:
          type: boolean
          default: false
          description: Allow tips.
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/LinkCustomField'
          nullable: true
          description: 'Custom fields to add. Note: max you can add 5'
        success_url:
          type: string
          format: uri
          description: Redirects to the success URL after the link gets completed.
        failure_url:
          type: string
          format: uri
          description: Redirects to the failure URL if the link payment fails.
      required:
      - currency
      - items
      - title
    CreateRefundRequest:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: amount to be refunded
      required:
      - amount
    CurrenciesApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Name of the Currency
        code:
          type: string
          description: Currency code
        decimal_places:
          type: integer
          description: Number of decimal places for the currency.
        denominations:
          type: array
          items:
            type: string
          description: List of available denominations based on the currency code
          readOnly: true
      required:
      - code
      - decimal_places
      - denominations
      - id
      - name
    CustomField:
      type: object
      properties:
        name:
          type: string
        is_required:
          type: boolean
      required:
      - is_required
      - name
    CustomFieldAnswer:
      type: object
      properties:
        name:
          type: string
        answer:
          type: string
      required:
      - name
    DiscountPercentageEnum:
      enum:
      - 0
      - 5
      - 10
      - 15
      - 20
      type: integer
      description: |-
        * `0` - 0%
        * `5` - 5%
        * `10` - 10%
        * `15` - 15%
        * `20` - 20%
    InviteMemberRequest:
      type: object
      properties:
        first_name:
          type: string
          description: First Name
          maxLength: 50
          minLength: 2
        last_name:
          type: string
          description: Last Name
          maxLength: 50
          minLength: 2
        email:
          type: string
          format: email
          description: Email Address
        phone_number:
          type: string
          description: Phone Number i-e +971500123456
          pattern: ^(?=.{3,16}$)[+]{0,1}[0-9() -]+$
          maxLength: 15
        job_title:
          type: string
          description: Job Title
          maxLength: 50
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          description: |-
            Role of the member in the team.

            * `admin` - ADMINISTRATOR
            * `manager` - MANAGER
            * `staff` - STAFF
      required:
      - email
      - first_name
      - job_title
      - last_name
      - phone_number
      - role
    InvoiceDetailApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        reference_id:
          type: string
          readOnly: true
          title: Title
        created:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          readOnly: true
        code:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
          description: URL of the link or invoice,
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        currency:
          type: string
          title: Currency code
        status:
          allOf:
          - $ref: '#/components/schemas/InvoiceDetailApiStatusEnum'
          readOnly: true
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
          title: Tax amount
        allow_tip:
          type: boolean
          readOnly: true
        shipping_address_required:
          type: boolean
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/LinkItem'
          readOnly: true
        taxes:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        note:
          type: string
          readOnly: true
        expiry:
          type: string
          format: date-time
          readOnly: true
          title: Expires at
        discount_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        tip_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        user:
          $ref: '#/components/schemas/UserMicroApi'
        contact:
          $ref: '#/components/schemas/ContactMiniApi'
        tip:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        invoice_number:
          type: string
          readOnly: true
        service_date:
          type: string
          format: date-time
          readOnly: true
        due_date:
          type: string
          format: date-time
          readOnly: true
        interval_count:
          type: integer
          readOnly: true
          title: Due in Days
        starts_at:
          type: string
          format: date-time
          readOnly: true
          title: Schedule starts at
        ends_at:
          type: string
          format: date-time
          readOnly: true
          title: Schedule ends at
        due_days:
          type: integer
          readOnly: true
          title: Due in Days
        email:
          type: string
          format: email
          writeOnly: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          default: []
        success_url:
          type: string
          format: uri
          description: Redirects to the success URL after the invoice is completed.
        failure_url:
          type: string
          format: uri
          description: Redirects to the failure URL if the invoice payment fails.
        files:
          type: array
          items:
            $ref: '#/components/schemas/LinkFileFilteredApi'
          readOnly: true
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/LinkReminderFilteredApi'
          readOnly: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/ChargeEventApi'
      required:
      - allow_tip
      - amount
      - code
      - contact
      - created
      - currency
      - discount
      - due_date
      - due_days
      - ends_at
      - events
      - expiry
      - files
      - id
      - interval_count
      - invoice_number
      - items
      - note
      - reference_id
      - reminders
      - service_date
      - shipping_address_required
      - starts_at
      - status
      - tax
      - tip
      - title
      - url
      - user
    InvoiceDetailApiStatusEnum:
      enum:
      - enabled
      - disabled
      - archived
      - paid
      - unpaid
      - overdue
      - cancelled
      - scheduled
      type: string
      description: |-
        * `enabled` - Enabled
        * `disabled` - disabled
        * `archived` - Archived
        * `paid` - Paid
        * `unpaid` - Unpaid
        * `overdue` - Overdue
        * `cancelled` - Cancelled
        * `scheduled` - Scheduled
    LinkApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        currency:
          type: string
          title: Currency code
        status:
          type: string
          readOnly: true
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        allow_tip:
          type: boolean
          readOnly: true
        shipping_address_required:
          type: boolean
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/LinkItem'
        tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
          title: Tax amount
        note:
          type: string
          readOnly: true
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/Tax'
          readOnly: true
        charge:
          type: string
          readOnly: true
        discount_percentage:
          type: integer
          readOnly: true
        tip:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
          readOnly: true
        tip_percentage:
          type: integer
          readOnly: true
        due_date:
          type: string
          format: date-time
          readOnly: true
        contact:
          type: object
          additionalProperties: {}
          readOnly: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          readOnly: true
      required:
      - allow_tip
      - amount
      - charge
      - contact
      - currency
      - custom_fields
      - discount
      - discount_percentage
      - due_date
      - id
      - items
      - note
      - shipping_address_required
      - status
      - tax
      - taxes
      - tip
      - tip_percentage
      - title
      - url
    LinkCustomField:
      type: object
      properties:
        name:
          type: string
        is_required:
          type: boolean
          default: false
      required:
      - name
    LinkFileFilteredApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          readOnly: true
          title: File title
        content_type:
          type: string
          readOnly: true
        file:
          type: string
          format: uri
          readOnly: true
      required:
      - content_type
      - file
      - id
      - title
    LinkItem:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,3})?$
        name:
          type: string
          maxLength: 100
      required:
      - amount
    LinkItemAPI:
      type: object
      properties:
        name:
          type: string
          description: Item Name
          maxLength: 50
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - amount
      - name
    LinkReminderFilteredApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        days:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        invoice:
          type: integer
        run_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - days
      - id
      - invoice
      - run_at
      - title
    PaginatedBalanceTransactionApiList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BalanceTransactionApi'
    PaginatedChargeApiList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChargeApi'
    PaginatedContacts:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          format: uri
          nullable: true
        previous:
          type: string
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContactApi'
      required:
      - count
      - next
      - previous
      - results
    PaginatedInvoiceDetailApiList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceDetailApi'
    PaginatedLinkApiList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LinkApi'
    PatchedInvoiceUpdateApi:
      type: object
      properties:
        cancel:
          type: boolean
    PatchedLinkUpdateApi:
      type: object
      properties:
        enable:
          type: boolean
        disable:
          type: boolean
        delete:
          type: boolean
    Province:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    RoleEnum:
      enum:
      - admin
      - manager
      - staff
      type: string
      description: |-
        * `admin` - ADMINISTRATOR
        * `manager` - MANAGER
        * `staff` - STAFF
    Tax:
      type: object
      properties:
        name:
          type: string
        mode:
          type: string
        mode_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          default: '0.000'
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,7}(?:\.\d{0,3})?$
          default: '0.000'
      required:
      - mode
      - name
    TypeEnum:
      enum:
      - authorised
      - authorisation_cancelled
      - authorisation_captured
      - created
      - completed
      - customer_linked
      - customer_unlinked
      - dispute_lost
      - dispute_raised
      - dispute_resolved
      - receipt_sent
      - refunded
      - partially_refunded
      - failed
      type: string
      description: |-
        * `authorised` - Authorised
        * `authorisation_cancelled` - Cancelled
        * `authorisation_captured` - Captured
        * `created` - Created
        * `completed` - Paid
        * `customer_linked` - Customer added
        * `customer_unlinked` - Customer removed
        * `dispute_lost` - Dispute lost
        * `dispute_raised` - Dispute raised
        * `dispute_resolved` - Dispute won
        * `receipt_sent` - Receipt sent
        * `refunded` - Refunded
        * `partially_refunded` - Partially refunded
        * `failed` - Failed
    UserMicroApi:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - id
      - last_name
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: Your API key. This is required by all endpoints to access our API
        programatically.                             You can view your API Key by
        navigating to the app settings
